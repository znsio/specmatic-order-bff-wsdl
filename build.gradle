import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.9.25'
    id 'org.springframework.boot' version '3.5.3'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
    id 'jacoco'
    id("com.github.bjornvester.wsdl2java") version "2.0.2"
}

repositories {
    mavenLocal()
    maven {
        url = uri("lib")
    }
    mavenCentral()
}

wsdl2java {
    cxfVersion.set("4.0.2")

    wsdlDir.set(layout.projectDirectory.dir("wsdls"))
    includes.set(
        [
            "order_api.wsdl", "product_bff_search.wsdl"
        ]
    )

    generatedSourceDir.set(layout.projectDirectory.dir("src/generated/wsdl2java"))

    verbose = true
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "17"
    }
}

jacocoTestReport {
    dependsOn test
    reports {
        csv.required = true
    }
}

def specmatic_version = "2.14.3"

dependencies {
    implementation platform('org.springframework.boot:spring-boot-dependencies:3.5.3')
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'jakarta.activation:jakarta.activation-api:2.1.3'
    implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.5'
    implementation 'jakarta.activation:jakarta.activation-api:2.1.3'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
    implementation 'jakarta.xml.soap:jakarta.xml.soap-api:2.0.1'
    implementation 'javax.xml.soap:javax.xml.soap-api:1.4.0'
    implementation 'com.sun.xml.messaging.saaj:saaj-impl:1.5.3'
    implementation 'org.springframework.ws:spring-ws-core:3.1.8'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "io.specmatic:junit5-support:${specmatic_version}"
    testImplementation "io.specmatic:specmatic-core:${specmatic_version}"
    testImplementation 'org.assertj:assertj-core:3.24.2'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.13.2'

    // https://mvnrepository.com/artifact/org.glassfish.hk2/osgi-resource-locator
    implementation group: 'org.glassfish.hk2', name: 'osgi-resource-locator', version: '3.0.0'

    implementation 'com.sun.xml.ws:jaxws-ri:4.0.3'
}

sourceSets {
    test {
        resources {
            srcDir file('src/test/kotlin')
            exclude '**/*.java'
            exclude '**/*.kt}'
        }
    }
}

test {
    useJUnitPlatform {
        includeEngines("junit-jupiter")
    }
    testLogging.showStandardStreams = true

    afterSuite { desc, result ->
        if (!desc.parent) {
            def resultLine = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
            def lineLength = resultLine.length()
            def separator = "-" * lineLength

            println separator
            println resultLine
            println separator
        }
    }

}

group = 'io.specmatic.sample'
version = '1.0'
sourceCompatibility = '17'

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        exclude group: 'ch.qos.logback', module: 'logback-classic'
        exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
    }
}
